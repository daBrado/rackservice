#!/usr/bin/env ruby

require './rackservice'

require 'minitest/spec'
require 'minitest/autorun'
require 'net/http'
require 'rack'
require 'stringio'

LOG = StringIO.new

class TestAPI < RackService::API
  def initialize
    @log = Logger.new(LOG)
    @log.formatter = RackService::LogFormatter
  end
  def log()
    LOG.reopen
    @log.info 'message'
    LOG.rewind
  end
  def get(param, name:nil)
    "get #{param} #{name}"
  end
  def get_complex(param)
    param
  end
  def get_json(param, name:nil)
    ['get_json', param, name]
  end
  post
  def post(param, name:nil)
    "post #{param} #{name}"
  end
end

describe RackService do
  PORT = 4560
  DATA = {'name'=>'value'}
  before do
    @server = Thread.new{ Rack::Server.start(Port:PORT,app:TestAPI.new) }
    loop { @server.join(0); break if (Net::HTTP.get_response('localhost', '/', PORT) rescue nil) }
  end
  def request req
    Net::HTTP.new('localhost', PORT).request req
  end
  it "can log" do
    res = request Net::HTTP::Get.new('/log', {'User-Agent' => 'RackService MiniTest'})
    LOG.read.must_match /^[^\n]+ 127\.0\.0\.1 "-" "RackService MiniTest" log message\n$/
  end
  it "can get" do
    res = request Net::HTTP::Get.new('/get/param?'+URI::encode_www_form(DATA))
    res.body.must_equal "get param value"
  end
  it "can get JSON" do
    res = request Net::HTTP::Get.new('/get_json/param?'+URI::encode_www_form(DATA))
    JSON.parse(res.body).must_equal ['get_json', 'param', 'value']
  end
  it "can post" do
    req = Net::HTTP::Post.new('/post/param')
    req.form_data = DATA
    res = request req
    res.body.must_equal "post param value"
  end
  it "can get with JSON" do
    res = request Net::HTTP::Get.new('/get/param?'+URI::encode_www_form_component(DATA.to_json))
    res.body.must_equal "get param value"
  end
  it "can get with JSON positional parameter" do
    res = request Net::HTTP::Get.new('/get_complex/'+URI::encode_www_form_component(DATA.to_json))
    JSON.parse(res.body).must_equal DATA
  end
  it "can post with JSON" do
    req = Net::HTTP::Post.new('/post/param')
    req.content_type = 'application/json'
    req.body = DATA.to_json
    res = request req
    res.body.must_equal "post param value"
  end
end
